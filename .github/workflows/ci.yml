name: Build & Test
"on":
  push:
    branches:
    - '*'
  pull_request:
    branches:
    - '*'
  schedule:
  - cron: 01 13 * * SAT
jobs:
  build:
    name: Build & Test
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macOS-latest
        - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5
      with:
        go-version: '>=1.21'
    - name: Set GOVERSION environment variable (Linux/macOS)
      if: runner.os != 'Windows'
      run: echo "GOVERSION=$(go version)" >> $GITHUB_ENV
    - name: Set GOVERSION environment variable (Windows)
      if: runner.os == 'Windows'
      run: echo "GOVERSION=$(go version)" | Out-File -FilePath $env:GITHUB_ENV -Append
    - name: Build & Test
      run: |
        go build -v
        go test ./...
    - name: Run staticcheck
      uses: dominikh/staticcheck-action@fe1dd0c3658873b46f8c9bb3291096a617310ca6 # v1.3.1
      with:
        version: latest
        install-go: false
    - name: Run GoReleaser
      if: runner.os == 'Linux'
      uses: goreleaser/goreleaser-action@9ed2f89a662bf1735a48bc8557fd212fa902bebf # v6
      with:
        args: release --snapshot --skip=publish --clean
    - name: Colored Output Test
      if: runner.os == 'Linux'
      shell: script -q -e -c "bash {0}"
      run: go run main.go -- main.go
